# Generated by Django 4.2.23 on 2025-08-18 17:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PackingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pallet_width', models.FloatField(default=10.0, help_text='Pallet width in units', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(100.0)])),
                ('pallet_length', models.FloatField(default=10.0, help_text='Pallet length in units', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(100.0)])),
                ('pallet_height', models.FloatField(default=10.0, help_text='Pallet height in units', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(100.0)])),
                ('rotation_setting', models.IntegerField(choices=[(1, 'No Rotation (XY only)'), (2, 'Full Rotation (All orientations)')], default=1, help_text='Box rotation setting')),
                ('algorithm', models.CharField(choices=[('corner_height', 'Corner Height Heuristic'), ('heightmap_min', 'Height Map Minimization'), ('random', 'Random Placement')], default='corner_height', help_text='Packing algorithm to use', max_length=20)),
                ('csv_file', models.FileField(blank=True, help_text='CSV file with box dimensions (x,y,z columns)', null=True, upload_to='csv_uploads/')),
                ('utilization_rate', models.FloatField(blank=True, help_text='Space utilization percentage', null=True)),
                ('packed_boxes_count', models.IntegerField(blank=True, help_text='Number of boxes successfully packed', null=True)),
                ('simulation_video', models.FileField(blank=True, help_text='Generated packing simulation video', null=True, upload_to='simulation_videos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BoxData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField(help_text='Box width', validators=[django.core.validators.MinValueValidator(0.1)])),
                ('y', models.FloatField(help_text='Box length', validators=[django.core.validators.MinValueValidator(0.1)])),
                ('z', models.FloatField(help_text='Box height', validators=[django.core.validators.MinValueValidator(0.1)])),
                ('is_packed', models.BooleanField(default=False)),
                ('position_x', models.FloatField(blank=True, null=True)),
                ('position_y', models.FloatField(blank=True, null=True)),
                ('position_z', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='packing.packingsession')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
